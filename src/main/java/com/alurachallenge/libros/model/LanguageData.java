package com.alurachallenge.libros.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
//enum for languages available
public enum LanguageData {
    ABKHAZIAN("ab"),
    AFAR("aa"),
    AFRIKAANS("af"),
    AIMARA("ay"),
    AKAN("ak"),
    ALBANIAN("sq"),
    GERMAN("de"),
    AMHARIC("am"),
    ARABIC("ar"),
    ARAGONESE("an"),
    ARMENIAN("hy"),
    ASSAMESE("as"),
    AVARIC("av"),
    AVESTAN("ae"),
    AZERBAIJANI("az"),
    BAMBARA("bm"),
    BASHKIR("ba"),
    BENGALI("bn"),
    BHOJPURI("bh"),
    BELARUSIAN("be"),
    BURMESE("my"),
    BISLAMA("bi"),
    BOSNIAN("bs"),
    BRETON("br"),
    BULGARIAN("bg"),
    CACHEMIRO("ks"),
    CAMBODIAN("km"),
    KANNADA("kn"),
    CATALAN("ca"),
    CHAMORRO("ch"),
    CHECHEN("ce"),
    CZECH("cs"),
    CHICHEWA("ny"),
    CHINESE("zh"),
    ZHUANG("za"),
    CHUVASH("cv"),
    SINHALESE("si"),
    KOREAN("ko"),
    CORNISH("kw"),
    CORSICAN("co"),
    CREE("cr"),
    CROATIAN("hr"),
    DANISH("da"),
    DZONGKHA("dz"),
    SLAVIC("cu"),
    SLOVAK("sk"),
    SLOVENIAN("sl"),
    SPANISH("es"),
    ESPERANTO("eo"),
    ESTONIAN("et"),
    EWE("ee"),
    FAROESE("fo"),
    FIJIAN("fj"),
    FINNISH("fi"),
    FRENCH("fr"),
    FRISIAN("fy"),
    FULA("ff"),
    GAELIC("gd"),
    WELSH("cy"),
    GALICIAN("gl"),
    GEORGIAN("ka"),
    GREEK("e"),
    GREENLANDIC("k"),
    GUARANI("gn"),
    GUJARATI("gu"),
    HAITIAN("ht"),
    HAUSA("ha"),
    HEBREW("he"),
    HERERO("hz"),
    HINDI("hi"),
    HIRI_MOTU("ho"),
    HUNGARIAN("hu"),
    IDO("io"),
    IGBO("ig"),
    INDONESIAN("id"),
    ENGLISH("en"),
    INTERLINGUA("ia"),
    INUKTITUT("iu"),
    INUPIAQ("ik"),
    IRISH("ga"),
    ICELANDIC("is"),
    ITALIAN("it"),
    JAPANESE("ja"),
    JAVANESE("jv"),
    KANURI("kr"),
    KAZAKH("kk"),
    KIKUYU("ki"),
    KYRGYZ("ky"),
    KIRUNDI("rn"),
    KOMI("kv"),
    CONGO("kg"),
    KWANYAMA("kj"),
    KURDISH("ku"),
    LAO("lo"),
    LATIN("la"),
    LATVIAN("lv"),
    LIMBURGISH("li"),
    LINGALA("ln"),
    LITHUANIAN("lt"),
    LUBA("lu"),
    LUGANDA("lg"),
    LUXEMBOURGISH("lb"),
    MACEDONIAN("mk"),
    MALAYALAM("ml"),
    MALAY("ms"),
    MALDIVIAN("dv"),
    MALAGASY("mg"),
    MALTESE("mt"),
    MANX("gv"),
    MAORI("mi"),
    MARATHI("mr"),
    MARSHALLESE("mh"),
    MOLDOVAN("mo"),
    MONGOLIAN("mn"),
    NAURUAN("na"),
    NAVAHO("nv"),
    NORTH_NDEBELE("nd"),
    SOUTH_NDEBELE("nr"),
    NDONGA("ng"),
    DUTCH("nl"),
    NEPALI("ne"),
    NORWEGIAN("no"),
    NORWEGIAN_BOKMAL("nb"),
    NYNORSK("nn"),
    OCCIDENTAL("ie"),
    OCCITAN("oc"),
    OJIBWA("oj"),
    ORIYA("or"),
    OROMO("om"),
    OSSETIC("os"),
    PALI("pi"),
    PUNJABI("pa"),
    PASHTO("ps"),
    PERSIAN("fa"),
    POLISH("pl"),
    PORTUGUESE("pt"),
    QUECHUA("qu"),
    ROMANSH("rm"),
    KINYARWANDA("rw"),
    ROMANIAN("ro"),
    RUSSIAN("ru"),
    SAMI("se"),
    SAMOAN("sm"),
    SANGO("sg"),
    SANSKRIT("sa"),
    SARDINIAN("sc"),
    SERBIAN("sr"),
    SESOTHO("st"),
    SETSWANA("tn"),
    SHONA("sn"),
    SINDHI("sd"),
    SOMALI("so"),
    SWAHILI("sw"),
    SWATI("ss"),
    SWEDISH("sv"),
    SUNDANESE("su"),
    TAGALOG("tl"),
    TAHITIAN("ty"),
    THAI("th"),
    TAMIL("ta"),
    TATAR("tt"),
    TAJIK("tg"),
    TELUGU("te"),
    TIBETAN("bo"),
    TIGRINYA("ti"),
    TONGAN("to"),
    TSONGA("ts"),
    TURKISH("tr"),
    TURKMEN("tk"),
    TWI("tw"),
    UKRAINIAN("uk"),
    UYGHUR("ug"),
    URDU("ur"),
    UZBEK("uz"),
    WALLON("wa"),
    BASQUE("eu"),
    VENDA("ve"),
    VIETNAMESE("vi"),
    VOLAPUK("vo"),
    WOLOF("wo"),
    XHOSA("xh"),
    SICHUAN_YI("ii"),
    YIDDISH("yi"),
    YORUBA("yo"),
    ZULU("zu");

    private final String languageCode;

    // Constructor
    LanguageData(String languageCode) {
        this.languageCode = languageCode;
    }
    @JsonValue
    public String getLanguageCode() {
        return languageCode;
    }
    public Object getCode() {
        return languageCode;
    }

    @JsonCreator
    public static LanguageData fromString(String text) {
        for (LanguageData language : LanguageData.values()) {
            if (language.languageCode.equalsIgnoreCase(text)) {
                return language;
            }
        }
        throw new IllegalArgumentException("Language not found: " + text);
    }


}
